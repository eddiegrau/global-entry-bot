name: Package and Deploy to AWS Lambda

on:
  push:
    branches:
      - main

jobs:
  package:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: 3.8

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Package project
      run: |
        mkdir package
        rsync -Rr ./* package/
        cd package
        pip install -r ../requirements.txt -t .
        zip -r ../lambda_package.zip .
   
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: lambda_package
        path: lambda_package.zip

  deploy:
    needs: package
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: lambda_package

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: 3.8

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install awscli

    - name: Configure AWS Credentials For GitHub Actions
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Deploy to AWS Lambda
      run: |
        aws lambda update-function-code --function-name GE-Bot --zip-file fileb://lambda_package.zip
        
    - name: Mask secret
      run: |
        echo "::add-mask::${{ secrets.T_ENV }}"  
    
    # - name: Update Lambda environment variable with secret (with retries) # Disabled cause it's broke
    #   run: |
    #     for i in {1..5}; do
    #       echo "Attempt $i..."
    #       if aws lambda update-function-configuration --function-name GE-Bot --environment "{"Variables":{"TWTR":"${{ secrets.T_ENV }}"}}"; then
    #         echo "Update successful"
    #         break
    #       elif [ "$i" -lt 5 ]; then
    #         echo "Update failed, retrying in 10 seconds..."
    #         sleep 10
    #       else
    #         echo "Update failed after 5 attempts, exiting..."
    #         exit 1
    #       fi
    #     done